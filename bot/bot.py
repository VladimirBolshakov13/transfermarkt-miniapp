import os
import random
import aiohttp
from aiogram import Bot, Dispatcher, Router
from aiogram.filters import Command
from aiogram.types import Message
from dotenv import load_dotenv

load_dotenv()

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
TOKEN = os.getenv("TOKEN")
API_URL = "http://127.0.0.1:8000"

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞, –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ
games = {}

# –°–ø–∏—Å–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–æ–≤, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ
player_traits = {
    "Messi": {
        "is_alive": True,
        "is_playing_now": True,
        "team": "PSG",
        "is_playing_in_top5_leagues": True,
        "position": "forward",
        "clubs": ["Barcelona", "PSG"],
        "goals_scored": 700,
        "matches_played": 800,
        "trophies": ["Ballon d'Or", "Champions League", "La Liga"],
        "health_status": "Excellent",
        "on_transfer": False,
        "birthdate": "1987-06-24",
        "national_team": "Argentina",
        "national_team_matches": 150,
        "national_team_goals": 80,
        "market_value": 100000000,
        "highest_valuation_club": "Barcelona"
    },
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
@router.message(Command("startgame"))
async def start_game(message: Message):
    user_id = message.from_user.id

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    random_player_name = random.choice(list(player_traits.keys()))

    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    games[user_id] = {
        "player_name": random_player_name,
        "questions_asked": 0,
        "max_questions": 5,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä—ã—Ö –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω —É–≥–∞–¥–∞—Ç—å
        "traits": player_traits[random_player_name],
    }

    # –°–æ–æ–±—â–∞–µ–º –∏–≥—Ä–æ–∫—É, —á—Ç–æ –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å
    await message.answer(f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —è –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å, –∫—Ç–æ —ç—Ç–æ!\n–£ –≤–∞—Å {games[user_id]['max_questions']} –ø–æ–ø—ã—Ç–æ–∫!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
@router.message()
async def ask_question(message: Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
    if user_id not in games:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /startgame.")
        return

    game_data = games[user_id]
    player_name = game_data["player_name"]
    traits = game_data["traits"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—á–µ—Ä–ø–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    if game_data["questions_asked"] >= game_data["max_questions"]:
        await message.answer(f"–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –ò–≥—Ä–æ–∫ –±—ã–ª {player_name}. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /startgame.")
        del games[user_id]  # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
        return

    # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    question = message.text.strip().lower()

    # –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞
    if "–∂–∏–≤–æ–π" in question or "–∏–≥—Ä–∞–µ—Ç –¥–æ —Å–∏—Ö –ø–æ—Ä" in question:
        answer = "–¥–∞" if traits["is_alive"] else "–Ω–µ—Ç"
    elif "–∏–≥—Ä–∞–µ—Ç" in question and "–∫–æ–º–∞–Ω–¥–µ" in question:
        answer = f"–û–Ω –∏–≥—Ä–∞–µ—Ç –≤ {traits['team']}." if traits["is_playing_now"] else "–û–Ω –±–æ–ª—å—à–µ –Ω–µ –∏–≥—Ä–∞–µ—Ç."
    elif "—Ç–æ–ø 5 –ª–∏–≥–∞—Ö" in question:
        answer = "–¥–∞" if traits["is_playing_in_top5_leagues"] else "–Ω–µ—Ç"
    elif "–Ω–∞–ø–∞–¥–∞—é—â–∏–π" in question:
        answer = "–¥–∞" if traits["position"] == "forward" else "–Ω–µ—Ç"
    elif "–∑–∞—â–∏—Ç–Ω–∏–∫" in question:
        answer = "–¥–∞" if traits["position"] == "defender" else "–Ω–µ—Ç"
    elif "–ø–æ–ª—É–∑–∞—â–∏—Ç–Ω–∏–∫" in question:
        answer = "–¥–∞" if traits["position"] == "midfielder" else "–Ω–µ—Ç"
    elif "–≤—Ä–∞—Ç–∞—Ä—å" in question:
        answer = "–¥–∞" if traits["position"] == "goalkeeper" else "–Ω–µ—Ç"
    elif "–∫–ª—É–±–∞—Ö" in question:
        answer = f"–û–Ω –∏–≥—Ä–∞–ª –≤ {', '.join(traits['clubs'])}."
    elif "–≥–æ–ª–æ–≤" in question:
        answer = f"–û–Ω –∑–∞–±–∏–ª {traits['goals_scored']} –≥–æ–ª–æ–≤ –∑–∞ –∫–∞—Ä—å–µ—Ä—É."
    elif "–º–∞—Ç—á–µ–π" in question:
        answer = f"–û–Ω —Å—ã–≥—Ä–∞–ª {traits['matches_played']} –º–∞—Ç—á–µ–π."
    elif "—Ç–∏—Ç—É–ª—ã" in question:
        answer = f"–û–Ω –≤—ã–∏–≥—Ä–∞–ª —Ç–∏—Ç—É–ª—ã: {', '.join(traits['trophies'])}."
    elif "—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è" in question:
        answer = f"–ï–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è: {traits['health_status']}."
    elif "–Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–µ" in question:
        answer = "–¥–∞" if traits["on_transfer"] else "–Ω–µ—Ç"
    elif "–≤–æ–∑—Ä–∞—Å—Ç" in question:
        age = 2025 - int(traits["birthdate"].split("-")[0])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–∏–π –≥–æ–¥ 2025
        answer = f"–ï–º—É {age} –ª–µ—Ç."
    elif "—Ä–æ–¥–∏–ª—Å—è" in question:
        answer = f"–û–Ω —Ä–æ–¥–∏–ª—Å—è {traits['birthdate']}."
    elif "–∫–∞—Ä—å–µ—Ä—ã" in question:
        career_start = 2000  # –ü—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∫–∞—Ä—å–µ—Ä—ã
        answer = f"–û–Ω –Ω–∞—á–∞–ª —Å–≤–æ—é –∫–∞—Ä—å–µ—Ä—É –≤ —Ñ—É—Ç–±–æ–ª–µ –≤ {career_start} –≥–æ–¥—É."
    elif "–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–Ω–æ–π" in question:
        answer = f"–û–Ω –∏–≥—Ä–∞–µ—Ç –∑–∞ {traits['national_team']}."
    elif "–º–∞—Ç—á–µ–π –∑–∞ —Å—Ç—Ä–∞–Ω—É" in question:
        answer = f"–û–Ω —Å—ã–≥—Ä–∞–ª {traits['national_team_matches']} –º–∞—Ç—á–µ–π –∑–∞ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É."
    elif "–≥–æ–ª—ã –∑–∞ —Å–±–æ—Ä–Ω—É—é" in question:
        answer = f"–û–Ω –∑–∞–±–∏–ª {traits['national_team_goals']} –≥–æ–ª–æ–≤ –∑–∞ —Å–±–æ—Ä–Ω—É—é."
    elif "—Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å" in question:
        answer = f"–ï–≥–æ —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ‚Ç¨{traits['market_value']}."
    elif "–∫–ª—É–±–µ –≤—ã—à–µ –≤—Å–µ–≥–æ" in question:
        answer = f"–ï–≥–æ –≤—ã—Å—à–∞—è –æ—Ü–µ–Ω–∫–∞ –±—ã–ª–∞ –≤ –∫–ª—É–±–µ {traits['highest_valuation_club']}."
    else:
        answer = "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å, –∑–∞–¥–∞–π—Ç–µ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ."

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    game_data["questions_asked"] += 1

    await message.answer(f"–û—Ç–≤–µ—Ç: {answer}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞
@router.message(Command("guess"))
async def guess_player(message: Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
    if user_id not in games:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /startgame.")
        return

    game_data = games[user_id]
    player_name = game_data["player_name"]

    # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –¥—É–º–∞–µ—Ç, —á—Ç–æ —É–≥–∞–¥–∞–ª
    if message.text.lower() == player_name.lower():
        await message.answer(f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏: {player_name}.")
        del games[user_id]  # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
    else:
        await message.answer("–ù–µ–≤–µ—Ä–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")

async def main():
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
    dp.include_router(router)

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ–±—Ö—É–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    await bot.delete_webhook(drop_pending_updates=True)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio

    asyncio.run(main())
